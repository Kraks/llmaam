digraph G {
  node [fontname = "Courier New"];
  edge [fontname = "helvetica"];
  0 -> 1 [label="let-rhs"];
  1 -> 2 [label="lam"];
  2 -> 3 [label="let-body"];
  3 -> 4 [label="let-rhs"];
  4 -> 5 [label="lam"];
  5 -> 6 [label="let-body"];
  6 -> 7 [label="let-rhs"];
  7 -> 8 [label="app-lhs"];
  8 -> 9 [label="var"];
  9 -> 10 [label="app-arg"];
  10 -> 11 [label="lit"];
  11 -> 12 [label="app-red"];
  12 -> 13 [label="app-lhs"];
  13 -> 14 [label="var"];
  14 -> 15 [label="app-arg"];
  15 -> 16 [label="var"];
  16 -> 17 [label="app-red"];
  17 -> 18 [label="var"];
  18 -> 19 [label="let-body"];
  19 -> 20 [label="let-rhs"];
  20 -> 21 [label="app-lhs"];
  21 -> 22 [label="var"];
  22 -> 23 [label="app-arg"];
  23 -> 24 [label="lit"];
  24 -> 25 [label="app-red"];
  24 -> 26 [label="app-red"];
  25 -> 27 [label="app-lhs"];
  27 -> 28 [label="var"];
  28 -> 29 [label="app-arg"];
  29 -> 30 [label="var"];
  30 -> 31 [label="app-red"];
  31 -> 32 [label="var"];
  32 -> 33 [label="let-body"];
  33 -> 34 [label="let-rhs"];
  34 -> 21 [label="app-lhs"];
  26 -> 35 [label="app-lhs"];
  35 -> 36 [label="var"];
  36 -> 37 [label="app-arg"];
  37 -> 38 [label="var"];
  38 -> 39 [label="app-red"];
  38 -> 40 [label="app-red"];
  39 -> 41 [label="var"];
  41 -> 42 [label="let-body"];
  42 -> 43 [label="let-rhs"];
  43 -> 44 [label="app-lhs"];
  44 -> 45 [label="var"];
  45 -> 46 [label="app-arg"];
  46 -> 47 [label="lit"];
  47 -> 48 [label="app-red"];
  47 -> 49 [label="app-red"];
  48 -> 35 [label="app-lhs"];
  49 -> 35 [label="app-lhs"];
  40 -> 50 [label="var"];
  50 -> 51 [label="let-body"];
  0 [label="0|EState((let id = (λz. z) in (let idid = (λw. (id w)) in (let x = (idid 1) in (let y = (idid 2) in x)))))"];
  41 [label="41|VState(ℕ)"];
  26 [label="26|EState((id w))"];
  11 [label="11|VState(ℕ)"];
  47 [label="47|VState(ℕ)"];
  42 [label="42|EState((let y = (idid 2) in x))"];
  40 [label="40|EState(z)"];
  18 [label="18|VState(ℕ)"];
  14 [label="14|VState(⟨(λz. z), Map()⟩)"];
  6 [label="6|EState((let x = (idid 1) in (let y = (idid 2) in x)))"];
  24 [label="24|VState(ℕ)"];
  22 [label="22|VState(⟨(λw. (id w)), Map(id -> BAddr(id,List()))⟩)"];
  33 [label="33|EState((let y = (idid 2) in x))"];
  15 [label="15|EState(w)"];
  35 [label="35|EState(id)"];
  12 [label="12|EState((id w))"];
  5 [label="5|VState(⟨(λw. (id w)), Map(id -> BAddr(id,List()))⟩)"];
  8 [label="8|EState(idid)"];
  20 [label="20|EState((idid 2))"];
  17 [label="17|EState(z)"];
  23 [label="23|EState(2)"];
  9 [label="9|VState(⟨(λw. (id w)), Map(id -> BAddr(id,List()))⟩)"];
  1 [label="1|EState((λz. z))"];
  25 [label="25|EState((id w))"];
  36 [label="36|VState(⟨(λz. z), Map()⟩)"];
  46 [label="46|EState(2)"];
  34 [label="34|EState((idid 2))"];
  7 [label="7|EState((idid 1))"];
  44 [label="44|EState(idid)"];
  43 [label="43|EState((idid 2))"];
  27 [label="27|EState(id)"];
  48 [label="48|EState((id w))"];
  49 [label="49|EState((id w))"];
  3 [label="3|EState((let idid = (λw. (id w)) in (let x = (idid 1) in (let y = (idid 2) in x))))"];
  30 [label="30|VState(ℕ)"];
  31 [label="31|EState(z)"];
  39 [label="39|EState(z)"];
  50 [label="50|VState(ℕ)"];
  38 [label="38|VState(ℕ)"];
  51 [label="51|EState(x)"];
  37 [label="37|EState(w)"];
  29 [label="29|EState(w)"];
  16 [label="16|VState(ℕ)"];
  21 [label="21|EState(idid)"];
  28 [label="28|VState(⟨(λz. z), Map()⟩)"];
  2 [label="2|VState(⟨(λz. z), Map()⟩)"];
  4 [label="4|EState((λw. (id w)))"];
  13 [label="13|EState(id)"];
  10 [label="10|EState(1)"];
  32 [label="32|VState(ℕ)"];
  19 [label="19|EState((let y = (idid 2) in x))"];
  45 [label="45|VState(⟨(λw. (id w)), Map(id -> BAddr(id,List()))⟩)"];
}
